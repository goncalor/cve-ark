{
	"cve": {
		"data_type": "CVE",
		"data_format": "MITRE",
		"data_version": "4.0",
		"CVE_data_meta": {
			"ID": "CVE-2021-3444",
			"ASSIGNER": "cve@mitre.org"
		},
		"problemtype": {
			"problemtype_data": [
				{
					"description": []
				}
			]
		},
		"references": {
			"reference_data": [
				{
					"url": "http://www.openwall.com/lists/oss-security/2021/03/23/2",
					"name": "[oss-security] 20210323 [CVE-2021-3444] Linux kernel bpf verifier incorrect mod32 truncation",
					"refsource": "MLIST",
					"tags": []
				},
				{
					"url": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=9b00f1b78809",
					"name": "https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=9b00f1b78809",
					"refsource": "MISC",
					"tags": []
				},
				{
					"url": "https://www.openwall.com/lists/oss-security/2021/03/23/2",
					"name": "https://www.openwall.com/lists/oss-security/2021/03/23/2",
					"refsource": "MISC",
					"tags": []
				}
			]
		},
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "The bpf verifier in the Linux kernel did not properly handle mod32 destination register truncation when the source register was known to be 0. A local attacker with the ability to load bpf programs could use this gain out-of-bounds reads in kernel memory leading to information disclosure (kernel memory), and possibly out-of-bounds writes that could potentially lead to code execution. This issue was addressed in the upstream kernel in commit 9b00f1b78809 (\"bpf: Fix truncation handling for mod32 dst reg wrt zero\") and in Linux stable kernels 5.11.2, 5.10.19, and 5.4.101."
				}
			]
		}
	},
	"configurations": {
		"CVE_data_version": "4.0",
		"nodes": []
	},
	"impact": {},
	"publishedDate": "2021-03-23T18:15Z",
	"lastModifiedDate": "2021-03-23T21:15Z"
}