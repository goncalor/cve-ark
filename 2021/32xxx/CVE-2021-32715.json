{
	"cve": {
		"data_type": "CVE",
		"data_format": "MITRE",
		"data_version": "4.0",
		"CVE_data_meta": {
			"ID": "CVE-2021-32715",
			"ASSIGNER": "security-advisories@github.com"
		},
		"problemtype": {
			"problemtype_data": [
				{
					"description": []
				}
			]
		},
		"references": {
			"reference_data": [
				{
					"url": "https://github.com/rust-lang/rust/pull/28826/commits/123a83326fb95366e94a3be1a74775df4db97739",
					"name": "https://github.com/rust-lang/rust/pull/28826/commits/123a83326fb95366e94a3be1a74775df4db97739",
					"refsource": "MISC",
					"tags": []
				},
				{
					"url": "https://github.com/hyperium/hyper/security/advisories/GHSA-f3pg-qwvg-p99c",
					"name": "https://github.com/hyperium/hyper/security/advisories/GHSA-f3pg-qwvg-p99c",
					"refsource": "CONFIRM",
					"tags": []
				}
			]
		},
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "hyper is an HTTP library for rust. hyper's HTTP/1 server code had a flaw that incorrectly parses and accepts requests with a `Content-Length` header with a prefixed plus sign, when it should have been rejected as illegal. This combined with an upstream HTTP proxy that doesn't parse such `Content-Length` headers, but forwards them, can result in \"request smuggling\" or \"desync attacks\". The flaw exists in all prior versions of hyper prior to 0.14.10, if built with `rustc` v1.5.0 or newer. The vulnerability is patched in hyper version 0.14.10. Two workarounds exist: One may reject requests manually that contain a plus sign prefix in the `Content-Length` header or ensure any upstream proxy handles `Content-Length` headers with a plus sign prefix."
				}
			]
		}
	},
	"configurations": {
		"CVE_data_version": "4.0",
		"nodes": []
	},
	"impact": {},
	"publishedDate": "2021-07-07T20:15Z",
	"lastModifiedDate": "2021-07-08T12:14Z"
}