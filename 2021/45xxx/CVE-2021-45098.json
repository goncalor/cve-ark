{
	"cve": {
		"data_type": "CVE",
		"data_format": "MITRE",
		"data_version": "4.0",
		"CVE_data_meta": {
			"ID": "CVE-2021-45098",
			"ASSIGNER": "cve@mitre.org"
		},
		"problemtype": {
			"problemtype_data": [
				{
					"description": []
				}
			]
		},
		"references": {
			"reference_data": [
				{
					"url": "https://github.com/OISF/suricata/releases",
					"name": "https://github.com/OISF/suricata/releases",
					"refsource": "MISC",
					"tags": []
				},
				{
					"url": "https://redmine.openinfosecfoundation.org/issues/4710",
					"name": "https://redmine.openinfosecfoundation.org/issues/4710",
					"refsource": "MISC",
					"tags": []
				},
				{
					"url": "https://forum.suricata.io/t/suricata-6-0-4-and-5-0-8-released/1942",
					"name": "https://forum.suricata.io/t/suricata-6-0-4-and-5-0-8-released/1942",
					"refsource": "MISC",
					"tags": []
				},
				{
					"url": "https://github.com/OISF/suricata/commit/50e2b973eeec7172991bf8f544ab06fb782b97df",
					"name": "https://github.com/OISF/suricata/commit/50e2b973eeec7172991bf8f544ab06fb782b97df",
					"refsource": "MISC",
					"tags": []
				}
			]
		},
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "An issue was discovered in Suricata before 6.0.4. It is possible to bypass/evade any HTTP-based signature by faking an RST TCP packet with random TCP options of the md5header from the client side. After the three-way handshake, it's possible to inject an RST ACK with a random TCP md5header option. Then, the client can send an HTTP GET request with a forbidden URL. The server will ignore the RST ACK and send the response HTTP packet for the client's request. These packets will not trigger a Suricata reject action."
				}
			]
		}
	},
	"configurations": {
		"CVE_data_version": "4.0",
		"nodes": []
	},
	"impact": {},
	"publishedDate": "2021-12-16T05:15Z",
	"lastModifiedDate": "2021-12-16T12:50Z"
}