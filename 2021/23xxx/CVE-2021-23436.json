{
	"cve": {
		"data_type": "CVE",
		"data_format": "MITRE",
		"data_version": "4.0",
		"CVE_data_meta": {
			"ID": "CVE-2021-23436",
			"ASSIGNER": "report@snyk.io"
		},
		"problemtype": {
			"problemtype_data": [
				{
					"description": []
				}
			]
		},
		"references": {
			"reference_data": [
				{
					"url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1579266",
					"name": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1579266",
					"refsource": "MISC",
					"tags": []
				},
				{
					"url": "https://snyk.io/vuln/SNYK-JS-IMMER-1540542",
					"name": "https://snyk.io/vuln/SNYK-JS-IMMER-1540542",
					"refsource": "MISC",
					"tags": []
				},
				{
					"url": "https://github.com/immerjs/immer/commit/fa671e55ee9bd42ae08cc239102b665a23958237",
					"name": "https://github.com/immerjs/immer/commit/fa671e55ee9bd42ae08cc239102b665a23958237",
					"refsource": "MISC",
					"tags": []
				}
			]
		},
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "This affects the package immer before 9.0.6. A type confusion vulnerability can lead to a bypass of CVE-2020-28477 when the user-provided keys used in the path parameter are arrays. In particular, this bypass is possible because the condition (p === \"__proto__\" || p === \"constructor\") in applyPatches_ returns false if p is ['__proto__'] (or ['constructor']). The === operator (strict equality operator) returns false if the operands have different type."
				}
			]
		}
	},
	"configurations": {
		"CVE_data_version": "4.0",
		"nodes": []
	},
	"impact": {},
	"publishedDate": "2021-09-01T18:15Z",
	"lastModifiedDate": "2021-09-01T18:29Z"
}