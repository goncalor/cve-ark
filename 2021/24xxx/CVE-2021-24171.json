{
	"cve": {
		"data_type": "CVE",
		"data_format": "MITRE",
		"data_version": "4.0",
		"CVE_data_meta": {
			"ID": "CVE-2021-24171",
			"ASSIGNER": "cve@mitre.org"
		},
		"problemtype": {
			"problemtype_data": [
				{
					"description": []
				}
			]
		},
		"references": {
			"reference_data": [
				{
					"url": "https://wpscan.com/vulnerability/ed4288a1-f7e4-455f-b765-5ac343f87194",
					"name": "https://wpscan.com/vulnerability/ed4288a1-f7e4-455f-b765-5ac343f87194",
					"refsource": "CONFIRM",
					"tags": []
				},
				{
					"url": "https://www.wordfence.com/blog/2021/03/critical-vulnerability-patched-in-woocommerce-upload-files/",
					"name": "https://www.wordfence.com/blog/2021/03/critical-vulnerability-patched-in-woocommerce-upload-files/",
					"refsource": "MISC",
					"tags": []
				}
			]
		},
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "The WooCommerce Upload Files WordPress plugin before 59.4 ran a single sanitization pass to remove blocked extensions such as .php. It was possible to bypass this and upload a file with a PHP extension by embedding a \"blocked\" extension within another \"blocked\" extension in the \"wcuf_file_name\" parameter. It was also possible to perform a double extension attack and upload files to a different location via path traversal using the \"wcuf_current_upload_session_id\" parameter."
				}
			]
		}
	},
	"configurations": {
		"CVE_data_version": "4.0",
		"nodes": []
	},
	"impact": {},
	"publishedDate": "2021-04-05T19:15Z",
	"lastModifiedDate": "2021-04-05T19:29Z"
}