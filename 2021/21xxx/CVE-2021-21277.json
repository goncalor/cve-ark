{
	"cve": {
		"data_type": "CVE",
		"data_format": "MITRE",
		"data_version": "4.0",
		"CVE_data_meta": {
			"ID": "CVE-2021-21277",
			"ASSIGNER": "cve@mitre.org"
		},
		"problemtype": {
			"problemtype_data": [
				{
					"description": [
						{
							"lang": "en",
							"value": "CWE-74"
						}
					]
				}
			]
		},
		"references": {
			"reference_data": [
				{
					"url": "http://blog.angularjs.org/2016/09/angular-16-expression-sandbox-removal.html",
					"name": "http://blog.angularjs.org/2016/09/angular-16-expression-sandbox-removal.html",
					"refsource": "MISC",
					"tags": []
				},
				{
					"url": "https://github.com/peerigon/angular-expressions/commit/07edb62902b1f6127b3dcc013da61c6316dd0bf1",
					"name": "https://github.com/peerigon/angular-expressions/commit/07edb62902b1f6127b3dcc013da61c6316dd0bf1",
					"refsource": "MISC",
					"tags": []
				},
				{
					"url": "https://github.com/peerigon/angular-expressions/security/advisories/GHSA-j6px-jwvv-vpwq",
					"name": "https://github.com/peerigon/angular-expressions/security/advisories/GHSA-j6px-jwvv-vpwq",
					"refsource": "CONFIRM",
					"tags": []
				},
				{
					"url": "https://www.npmjs.com/package/angular-expressions",
					"name": "https://www.npmjs.com/package/angular-expressions",
					"refsource": "MISC",
					"tags": []
				}
			]
		},
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "angular-expressions is \"angular's nicest part extracted as a standalone module for the browser and node\". In angular-expressions before version 1.1.2 there is a vulnerability which allows Remote Code Execution if you call \"expressions.compile(userControlledInput)\" where \"userControlledInput\" is text that comes from user input. The security of the package could be bypassed by using a more complex payload, using a \".constructor.constructor\" technique. In terms of impact: If running angular-expressions in the browser, an attacker could run any browser script when the application code calls expressions.compile(userControlledInput). If running angular-expressions on the server, an attacker could run any Javascript expression, thus gaining Remote Code Execution. This is fixed in version 1.1.2 of angular-expressions A temporary workaround might be either to disable user-controlled input that will be fed into angular-expressions in your application or allow only following characters in the userControlledInput."
				}
			]
		}
	},
	"configurations": {
		"CVE_data_version": "4.0",
		"nodes": []
	},
	"impact": {},
	"publishedDate": "2021-02-01T15:15Z",
	"lastModifiedDate": "2021-02-01T16:22Z"
}