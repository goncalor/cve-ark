{
	"cve": {
		"data_type": "CVE",
		"data_format": "MITRE",
		"data_version": "4.0",
		"CVE_data_meta": {
			"ID": "CVE-2021-29445",
			"ASSIGNER": "cve@mitre.org"
		},
		"problemtype": {
			"problemtype_data": [
				{
					"description": [
						{
							"lang": "en",
							"value": "CWE-203"
						}
					]
				}
			]
		},
		"references": {
			"reference_data": [
				{
					"url": "https://github.com/panva/jose/security/advisories/GHSA-4v4g-726h-xvfv",
					"name": "https://github.com/panva/jose/security/advisories/GHSA-4v4g-726h-xvfv",
					"refsource": "CONFIRM",
					"tags": []
				},
				{
					"url": "https://www.npmjs.com/package/jose-node-esm-runtime",
					"name": "https://www.npmjs.com/package/jose-node-esm-runtime",
					"refsource": "MISC",
					"tags": []
				}
			]
		},
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "jose-node-esm-runtime is an npm package which provides a number of cryptographic functions. In versions prior to 3.11.4 the AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed `JWEDecryptionFailed` would be thrown. But a possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). A patch was released which ensures the HMAC tag is verified before performing CBC decryption. The fixed versions are `>=3.11.4`. Users should upgrade to `^3.11.4`."
				}
			]
		}
	},
	"configurations": {
		"CVE_data_version": "4.0",
		"nodes": []
	},
	"impact": {},
	"publishedDate": "2021-04-16T22:15Z",
	"lastModifiedDate": "2021-04-16T22:15Z"
}