{
	"cve": {
		"data_type": "CVE",
		"data_format": "MITRE",
		"data_version": "4.0",
		"CVE_data_meta": {
			"ID": "CVE-2021-37692",
			"ASSIGNER": "security-advisories@github.com"
		},
		"problemtype": {
			"problemtype_data": [
				{
					"description": [
						{
							"lang": "en",
							"value": "CWE-20"
						}
					]
				}
			]
		},
		"references": {
			"reference_data": [
				{
					"url": "https://github.com/tensorflow/tensorflow/pull/50508",
					"name": "https://github.com/tensorflow/tensorflow/pull/50508",
					"refsource": "MISC",
					"tags": []
				},
				{
					"url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cmgw-8vpc-rc59",
					"name": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cmgw-8vpc-rc59",
					"refsource": "CONFIRM",
					"tags": []
				},
				{
					"url": "https://github.com/tensorflow/tensorflow/commit/8721ba96e5760c229217b594f6d2ba332beedf22",
					"name": "https://github.com/tensorflow/tensorflow/commit/8721ba96e5760c229217b594f6d2ba332beedf22",
					"refsource": "MISC",
					"tags": []
				}
			]
		},
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions under certain conditions, Go code can trigger a segfault in string deallocation. For string tensors, `C.TF_TString_Dealloc` is called during garbage collection within a finalizer function. However, tensor structure isn't checked until encoding to avoid a performance penalty. The current method for dealloc assumes that encoding succeeded, but segfaults when a string tensor is garbage collected whose encoding failed (e.g., due to mismatched dimensions). To fix this, the call to set the finalizer function is deferred until `NewTensor` returns and, if encoding failed for a string tensor, deallocs are determined based on bytes written. We have patched the issue in GitHub commit 8721ba96e5760c229217b594f6d2ba332beedf22. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, which is the other affected version."
				}
			]
		}
	},
	"configurations": {
		"CVE_data_version": "4.0",
		"nodes": []
	},
	"impact": {},
	"publishedDate": "2021-08-12T23:15Z",
	"lastModifiedDate": "2021-08-13T12:20Z"
}