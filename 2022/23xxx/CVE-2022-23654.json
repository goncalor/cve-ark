{
	"cve": {
		"data_type": "CVE",
		"data_format": "MITRE",
		"data_version": "4.0",
		"CVE_data_meta": {
			"ID": "CVE-2022-23654",
			"ASSIGNER": "security-advisories@github.com"
		},
		"problemtype": {
			"problemtype_data": [
				{
					"description": [
						{
							"lang": "en",
							"value": "CWE-287"
						}
					]
				}
			]
		},
		"references": {
			"reference_data": [
				{
					"url": "https://github.com/Requarks/wiki/security/advisories/GHSA-3cv9-795v-6j7j",
					"name": "https://github.com/Requarks/wiki/security/advisories/GHSA-3cv9-795v-6j7j",
					"refsource": "CONFIRM",
					"tags": []
				},
				{
					"url": "https://github.com/Requarks/wiki/commit/411802ec2f654bb5ed1126c307575b81e2361c6b",
					"name": "https://github.com/Requarks/wiki/commit/411802ec2f654bb5ed1126c307575b81e2361c6b",
					"refsource": "MISC",
					"tags": []
				}
			]
		},
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "Wiki.js is a wiki app built on Node.js. In affected versions an authenticated user with write access on a restricted set of paths can update a page outside the allowed paths by specifying a different target page ID while keeping the path intact. The access control incorrectly check the path access against the user-provided values instead of the actual path associated to the page ID. Commit https://github.com/Requarks/wiki/commit/411802ec2f654bb5ed1126c307575b81e2361c6b fixes this vulnerability by checking access control on the path associated with the page ID instead of the user-provided value. When the path is different than the current value, a second access control check is then performed on the user-provided path before the move operation."
				}
			]
		}
	},
	"configurations": {
		"CVE_data_version": "4.0",
		"nodes": []
	},
	"impact": {},
	"publishedDate": "2022-02-22T20:15Z",
	"lastModifiedDate": "2022-02-24T15:15Z"
}