{
	"cve": {
		"data_type": "CVE",
		"data_format": "MITRE",
		"data_version": "4.0",
		"CVE_data_meta": {
			"ID": "CVE-2022-29223",
			"ASSIGNER": "security-advisories@github.com"
		},
		"problemtype": {
			"problemtype_data": [
				{
					"description": []
				}
			]
		},
		"references": {
			"reference_data": [
				{
					"url": "https://github.com/azure-rtos/usbx/security/advisories/GHSA-2qc5-385m-x862",
					"name": "https://github.com/azure-rtos/usbx/security/advisories/GHSA-2qc5-385m-x862",
					"refsource": "CONFIRM",
					"tags": []
				},
				{
					"url": "https://github.com/azure-rtos/usbx/releases/tag/v6.1.10_rel",
					"name": "https://github.com/azure-rtos/usbx/releases/tag/v6.1.10_rel",
					"refsource": "MISC",
					"tags": []
				}
			]
		},
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "Azure RTOS USBX is a USB host, device, and on-the-go (OTG) embedded stack. In versions prior to 6.1.10, an attacker can cause a buffer overflow by providing the Azure RTOS USBX host stack a HUB descriptor with `bNbPorts` set to a value greater than `UX_MAX_TT` which defaults to 8. For a `bNbPorts` value of 255, the implementation of `ux_host_class_hub_descriptor_get` function will modify the contents of `hub` -> `ux_host_class_hub_device` -> `ux_device_hub_tt` array violating the end boundary by 255 - `UX_MAX_TT` items. The USB host stack needs to validate the number of ports reported by the hub, and if the value is larger than UX_MAX_TT, USB stack needs to reject the request. This fix has been included in USBX release 6.1.10."
				}
			]
		}
	},
	"configurations": {
		"CVE_data_version": "4.0",
		"nodes": []
	},
	"impact": {},
	"publishedDate": "2022-05-24T15:15Z",
	"lastModifiedDate": "2022-05-24T15:23Z"
}